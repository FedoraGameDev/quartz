<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. Resources on</title><link>https://FedoraGameDev.github.io/3.-resources/</link><description>Recent content in 3. Resources on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://FedoraGameDev.github.io/3.-resources/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://FedoraGameDev.github.io/3.-Resources/Packages/NPC-Schedule-System/Class-Diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://FedoraGameDev.github.io/3.-Resources/Packages/NPC-Schedule-System/Class-Diagram/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 classDiagram ISchedule &amp;lt;|-- SimpleSchedule : Implementation ITaskPool &amp;lt;|-- SimpleTaskPool : Implementation ITaskPool &amp;lt;|-- TaskManagerBehaviour : Implementation ITaskPoolItem &amp;lt;|-- SimpleTaskPoolItem : Implementation class ITaskPool { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +AddTask(taskPoolItem) +FindTask(timeFrame) ITask } class ITaskPoolItem { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +ITask Task +ITimeFrame TimeFrame +ITaskFilter TaskFilter +IPrioritySolver PrioritySolver +IAttendantSolver AttendantSolver } class ISchedule { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +AddScheduleable(scheduleable) +FillSchedule() } class SimpleSchedule { -IScheduleable[] _tasks } class SimpleTaskPool { -List&amp;lt;ITaskPoolItem&amp;gt; _taskPool } class SimpleTaskPoolItem { -ITask _task -ITimeFrame _timeFrame -ITaskFilter _taskFilter -IPrioritySolver _prioritySolver -IAttendantSolver _attendantSolver } class TaskManagerBehaviour { -ITaskManager _taskManager } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 classDiagram IScheduleable &amp;lt;|-- SimpleScheduleable : Implementation ITimeFrame &amp;lt;|-- SimpleTimeFrame : Implementation ITimeSolver &amp;lt;|-- SimpleTimeSolver : Implementation IPrioritySolver &amp;lt;|-- SimplePrioritySolver : Implementation class IScheduleable { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +CompareTo(scheduleable) int +ITask Task +ITimeFrame TimeFrame } class ITimeFrame { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +CompareTo(timeFrame) int +ulong StartTime +ulong EndTime +SetTimeFrame(startTime, endTime) +SetTimeFrame(startTime, duration) +SetTimeFrame(duration, endTime) +IsValidTime(timeSolver) bool } class ITimeSolver { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +ulong TimeValue +AddTime(duration) +SubtractTime(duration) } class IPrioritySolver { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +GetPriority(context) int } class SimpleScheduleable { -ITask _task -ITimeFrame _timeFrame } class SimpleTimeFrame { -ITimeSolver _startTime -ITimeSolver _endTime } class SimpleTimeSolver { -int _minute -int _hour } class SimplePrioritySolver { -int _priority } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 classDiagram ITaskFilter &amp;lt;|-- ManyFilter : Implementation IAttendantSolver &amp;lt;|-- SimpleAttendantSolver : Implementation class ITaskFilter { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +IsValid(context) bool } class IAttendantSolver { +IAttend[] Attendants +GetMinAttendants(context) int +GetMaxAttendants(context) int +AddAttendant(IAttend attendant) } class ITask { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; +DoTask(context) } class IContext { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; } class IAttend { &amp;lt;&amp;lt;interface&amp;gt;&amp;gt; } class ManyFilter { -ITaskFilter[] _filters } class SimpleAttendantSolver { -int _minAttendants -int _maxAttendants } 1 2 3 4 5 6 7 8 9 10 classDiagram class TimeFrameHelper { &amp;lt;&amp;lt;static&amp;gt;&amp;gt; +CompareTo(timeFrameA, timeFrameB) +CompareToPreferLaterEndTime(timeFrameA, timeFrameB) } class ScheduleableHelper { &amp;lt;&amp;lt;static&amp;gt;&amp;gt; +CompareTo(scheduleableA, scheduleableB) }</description></item></channel></rss>